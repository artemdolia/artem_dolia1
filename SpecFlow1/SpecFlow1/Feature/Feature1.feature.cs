// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
// Generation customised by SpecFlow.Contrib.Variants
namespace SpecFlow1.Feature
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Main functionality of the products site")]
    public partial class MainFunctionalityOfTheProductsSiteFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Feature1.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Feature", "Main functionality of the products site", "The user can search, change and add to a cart items.", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestCaseAttribute("Chrome", null, TestName="_1SummerIsDisplayedOnTheProductsPage with \"Chrome\"")]
        [NUnit.Framework.TestCaseAttribute("Edge", null, TestName="_1SummerIsDisplayedOnTheProductsPage with \"Edge\"")]
        public virtual void _1SummerIsDisplayedOnTheProductsPage(string browser, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Browser:Chrome",
                    "Browser:Edge"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("Browser", browser);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("1) Summer is displayed on the products page", null, @__tags, argumentsOfScenario);
            this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
            testRunner.Given(string.Format("the site is opened in the \'{0}\'", browser), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
            testRunner.And("the user enters \'Summer\' in search-field on the base page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
            testRunner.When("the user clicks on the search button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
            testRunner.Then("Summer is displayed in line Search above list of products on the base page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestCaseAttribute("Chrome", null, TestName="_2SortingIsPerformedFromHighToLowPriceWhenTheUserChoicesOptionPriceHighestFirstTh" +
            "en with \"Chrome\"")]
        [NUnit.Framework.TestCaseAttribute("Edge", null, TestName="_2SortingIsPerformedFromHighToLowPriceWhenTheUserChoicesOptionPriceHighestFirstTh" +
            "en with \"Edge\"")]
        public virtual void _2SortingIsPerformedFromHighToLowPriceWhenTheUserChoicesOptionPriceHighestFirstThen(string browser, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Browser:Chrome",
                    "Browser:Edge"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("Browser", browser);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("2) sorting is performed from high to low price when the user choices option Price" +
                    ": Highest first then", null, @__tags, argumentsOfScenario);
            this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
            testRunner.Given(string.Format("the site is opened in the \'{0}\'", browser), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
            testRunner.And("the user enters \'Summer\' in search-field on the base page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
            testRunner.And("the user clicks on the search button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
            testRunner.When("the user choices option Price: Highest first on the products page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
            testRunner.Then("sorting is performed from high price to low on the products page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestCaseAttribute("Chrome", null, TestName="_3ThePriceInColumnTotalCorrespondsToPriceOfItemWhenTheUserAddsItemToCart with \"Ch" +
            "rome\"")]
        [NUnit.Framework.TestCaseAttribute("Edge", null, TestName="_3ThePriceInColumnTotalCorrespondsToPriceOfItemWhenTheUserAddsItemToCart with \"Ed" +
            "ge\"")]
        public virtual void _3ThePriceInColumnTotalCorrespondsToPriceOfItemWhenTheUserAddsItemToCart(string browser, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Browser:Chrome",
                    "Browser:Edge"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("Browser", browser);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("3) the price in column \'Total\' corresponds to price of item when the user adds it" +
                    "em to cart", null, @__tags, argumentsOfScenario);
            this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
            testRunner.Given(string.Format("the site is opened in the \'{0}\'", browser), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
            testRunner.And("the user enters \'Summer\' in search-field on the base page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
            testRunner.And("the user clicks on the search button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
            testRunner.And("the user choices option Price: Highest first on products page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
            testRunner.And("the user adds item to cart on products page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
            testRunner.And("the user clicks \'Continue shopping\' in the popup", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
            testRunner.When("the user clicks on the cart button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
            testRunner.Then("the price in column \'Total\' corresponds to price of item", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
            testRunner.And("the name in column \'Description\' corresponds to price of item", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestCaseAttribute("Chrome", null, TestName="_4MessageProductSuccessfullyAddedToYourShoppingCartIsAppearedWhenTheUserAddsItemT" +
            "oCart with \"Chrome\"")]
        [NUnit.Framework.TestCaseAttribute("Edge", null, TestName="_4MessageProductSuccessfullyAddedToYourShoppingCartIsAppearedWhenTheUserAddsItemT" +
            "oCart with \"Edge\"")]
        public virtual void _4MessageProductSuccessfullyAddedToYourShoppingCartIsAppearedWhenTheUserAddsItemToCart(string browser, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Browser:Chrome",
                    "Browser:Edge"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("Browser", browser);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("4) message \'Product successfully added to your shopping cart\' is appeared when th" +
                    "e user adds item to cart", null, @__tags, argumentsOfScenario);
            this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
            testRunner.Given(string.Format("the site is opened in the \'{0}\'", browser), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
            testRunner.And("the user enters \'Blouse\' in search-field on the base page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
            testRunner.And("the user clicks on the search button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
            testRunner.And("the user presses \'More\' button for the first item on the products page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Quantity",
                        "Size",
                        "Color"});
            table1.AddRow(new string[] {
                        "3",
                        "L",
                        "white"});
            testRunner.And("the user sets parameters for item on TShirts page", ((string)(null)), table1, "And ");
            testRunner.When("the user clicks on add to cart button on TShirts page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
            testRunner.Then("the message \'Product successfully added to your shopping cart\' is appeared", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestCaseAttribute("Chrome", null, TestName="_5ItemsAreDisplayedWithRightParametresWhenTheUserAddsTwoItemsToCart with \"Chrome\"" +
            "")]
        [NUnit.Framework.TestCaseAttribute("Edge", null, TestName="_5ItemsAreDisplayedWithRightParametresWhenTheUserAddsTwoItemsToCart with \"Edge\"")]
        public virtual void _5ItemsAreDisplayedWithRightParametresWhenTheUserAddsTwoItemsToCart(string browser, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Browser:Chrome",
                    "Browser:Edge"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("Browser", browser);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("5) items are displayed with right parametres when the user adds two items to cart" +
                    "", null, @__tags, argumentsOfScenario);
            this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
            testRunner.Given(string.Format("the site is opened in the \'{0}\'", browser), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
            testRunner.And("the user enters \'Blouse\' in search-field on the base page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
            testRunner.And("the user clicks on the search button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
            testRunner.And("the user presses \'More\' button for the first item on the products page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Quantity",
                        "Size",
                        "Color"});
            table2.AddRow(new string[] {
                        "3",
                        "L",
                        "white"});
            testRunner.And("the user sets parameters for item on TShirts page", ((string)(null)), table2, "And ");
            testRunner.And("the user clicks on add to cart button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
            testRunner.And("the user clicks \'Continue shopping\' in the popup", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
            testRunner.And("the user deletes \'Blouse\' from search-field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
            testRunner.And("the user enters \'Printed summer\' in search-field on the base page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
            testRunner.And("the user clicks on the search button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
            testRunner.And("the user presses \'More\' button for the first item on the products page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Quantity",
                        "",
                        "Size",
                        "",
                        "Color"});
            table3.AddRow(new string[] {
                        "5",
                        "",
                        "M",
                        "",
                        "orange"});
            testRunner.And("the user sets parameters for item (adds quantity,color,size) on TShirts page", ((string)(null)), table3, "And ");
            testRunner.And("the user clicks on add to cart button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
            testRunner.When("the user clicks \'Proceed to checkout\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
            testRunner.Then("blouse is displayed with the right parameters", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
            testRunner.And("dress is displayed with right parameters", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestCaseAttribute("Chrome", null, TestName="_6BlouseRemainsInCartWhenTheUserDeletesOneDressFromCart with \"Chrome\"")]
        [NUnit.Framework.TestCaseAttribute("Edge", null, TestName="_6BlouseRemainsInCartWhenTheUserDeletesOneDressFromCart with \"Edge\"")]
        public virtual void _6BlouseRemainsInCartWhenTheUserDeletesOneDressFromCart(string browser, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Browser:Chrome",
                    "Browser:Edge"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("Browser", browser);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("6) blouse remains in cart when the user deletes one dress from cart", null, @__tags, argumentsOfScenario);
            this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
            testRunner.Given(string.Format("the site is opened in the \'{0}\'", browser), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
            testRunner.And("the user enters \'Blouse\' in search-field on the base page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
            testRunner.And("the user clicks on the search button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
            testRunner.And("the user presses \'More\' button for the first item on the products page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Quantity",
                        "",
                        "Size",
                        "",
                        "Color"});
            table4.AddRow(new string[] {
                        "3",
                        "",
                        "L",
                        "",
                        "white"});
            testRunner.And("the user sets parameters for item on TShirts page", ((string)(null)), table4, "And ");
            testRunner.And("the user clicks on add to cart button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
            testRunner.And("the user clicks \'Continue shopping\' in the popup", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
            testRunner.And("the user deletes \'Blouse\' from search-field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
            testRunner.And("the user enters \'Printed summer dress\' in search-field on the base page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
            testRunner.And("the user clicks on the search button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
            testRunner.And("the user presses \'More\' button for the first item on the products page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Quantity",
                        "",
                        "Size",
                        "",
                        "Color"});
            table5.AddRow(new string[] {
                        "5",
                        "",
                        "M",
                        "",
                        "orange"});
            testRunner.And("the user sets parameters for item (adds quantity,color,size) on TShirts page", ((string)(null)), table5, "And ");
            testRunner.And("the user clicks on add to cart button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
            testRunner.And("the user clicks \'Proceed to checkout\' button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
            testRunner.And("the user clicks on the delete button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
            testRunner.When("the dress does not remains on the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
            testRunner.Then("only a blouse remains in the table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestCaseAttribute("Chrome", null, TestName="_7TheUserAbleToSendMessageToSupport with \"Chrome\"")]
        [NUnit.Framework.TestCaseAttribute("Edge", null, TestName="_7TheUserAbleToSendMessageToSupport with \"Edge\"")]
        public virtual void _7TheUserAbleToSendMessageToSupport(string browser, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Browser:Chrome",
                    "Browser:Edge"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("Browser", browser);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("7) the user able to send message to support", null, @__tags, argumentsOfScenario);
            this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
            testRunner.Given(string.Format("the site is opened in the \'{0}\'", browser), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
            testRunner.And("the user enters \'T-shirt\' in search-field on the base page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
            testRunner.And("the user clicks on the search button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
            testRunner.And("the user presses \'More\' button for the first item on the products page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
            testRunner.And("the user clicks on Send to a friend button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
            testRunner.And("the user feels Name of friend field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
            testRunner.And("the user feels E-mail field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
            testRunner.When("the user clicks Send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
            testRunner.Then("appears success message Your e-mail has been sent successfully", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestCaseAttribute("Chrome", null, TestName="_8TheUserCanSendMessageToSiteTeam with \"Chrome\"")]
        [NUnit.Framework.TestCaseAttribute("Edge", null, TestName="_8TheUserCanSendMessageToSiteTeam with \"Edge\"")]
        public virtual void _8TheUserCanSendMessageToSiteTeam(string browser, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Browser:Chrome",
                    "Browser:Edge"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("Browser", browser);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("8) the user can send message to site team", null, @__tags, argumentsOfScenario);
            this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
            testRunner.Given(string.Format("the site is opened in the \'{0}\'", browser), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
            testRunner.And("the user clicks on Contact Us button on the base page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
            testRunner.And("the user choices Customer service in Subject Heading dropdown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
            testRunner.And("the user feels the Email address field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
            testRunner.And("the user feels the Order reference field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
            testRunner.And("the user feels text area message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
            testRunner.When("the user clicks on the Send button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
            testRunner.Then("success message is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestCaseAttribute("Chrome", null, TestName="_9WhenTheUserFeelsNewsletterFieldAndClicksEnterAppearsSuccessMessageNewsletterYou" +
            "HaveSuccessfullySubscribedToThisNewsletter_ with \"Chrome\"")]
        [NUnit.Framework.TestCaseAttribute("Edge", null, TestName="_9WhenTheUserFeelsNewsletterFieldAndClicksEnterAppearsSuccessMessageNewsletterYou" +
            "HaveSuccessfullySubscribedToThisNewsletter_ with \"Edge\"")]
        public virtual void _9WhenTheUserFeelsNewsletterFieldAndClicksEnterAppearsSuccessMessageNewsletterYouHaveSuccessfullySubscribedToThisNewsletter_(string browser, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Browser:Chrome",
                    "Browser:Edge"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("Browser", browser);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("9) when the user feels Newsletter field and clicks enter appears success message " +
                    "\" Newsletter : You have successfully subscribed to this newsletter.\"", null, @__tags, argumentsOfScenario);
            this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
            testRunner.Given(string.Format("the site is opened in the \'{0}\'", browser), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
            testRunner.When("the user enters email in Newsletter field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
            testRunner.Then("success message has appeared", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
